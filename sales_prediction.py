# -*- coding: utf-8 -*-
"""Sales_Prediction.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qcL8RJQB0a_gxk6w3VsW9FYySBJUk1fE

Import Libraries
"""

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_absolute_error
from sklearn.linear_model import LinearRegression

"""Read Data"""

df=pd.read_csv('/content/Advertising.csv')

df.head()

df.drop(columns=["Unnamed: 0"], axis=1, inplace=True)
df.head()

"""Split dataset """

features = ["TV", "Radio", "Newspaper"]
X = df[features]
target = "Sales"
y = df[target]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

y_mean = y_train.mean()
print("Mean Error: ", y_mean)
y_pred_baseline = [y_mean] * len(y_train)
print("Baseline Error: ", y_pred_baseline[:5])
mae_baseline = mean_absolute_error(y_train, y_pred_baseline)
print("MAE Baseline: ", mae_baseline)

"""Train Model"""

model = LinearRegression().fit(X_train, y_train)
model

y_pred_training = model.predict(X_train)
print("Predicted values after model: ", y_pred_training[:5])
mae_pred_training = mean_absolute_error(y_train, y_pred_training)
print("MAE for training data after prediction: ", mae_pred_training)

y_pred_test = model.predict(X_test)
print("Predicted values after model: ", y_pred_test[:5])
mae_pred_test = mean_absolute_error(y_test, y_pred_test)
print("MAE for test data after prediction: ", mae_pred_test)

intercept = model.intercept_
intercept

coefficient = model.coef_
coefficient

print(f"Sales = {intercept} + {coefficient[0]} * TV + {coefficient[1]} * Radio + {coefficient[2]} * Newspaper")

"""Evaluation"""

print("Score of training data: ", model.score(X_train, y_train))
print("Score of test data: ", model.score(X_test, y_test))